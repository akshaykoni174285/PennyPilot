user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout 65;
  access_log  /var/log/nginx/access.log combined;

  # =============================
  # üì¶ GZIP COMPRESSION
  # =============================
  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  # =============================
  # üß± RATE LIMIT SETTINGS
  # =============================
  limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

  # =============================
  # üîÄ LOAD BALANCER UPSTREAMS
  # =============================
  upstream backend_service {
    server host.docker.internal:5000;
    # server host.docker.internal:5001;
    keepalive 64;
  }

  upstream frontend_service {
    server host.docker.internal:3000;
    # server host.docker.internal:3001;
    keepalive 64;
  }

  # =============================
  # üåê MAIN HTTP SERVER BLOCK
  # =============================
  server {
    listen 80;
    server_name localhost;

    # ====================
    # üéØ FRONTEND ROUTES
    # ====================
    location / {
      proxy_pass http://frontend_service;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_cache_bypass $http_upgrade;

      # Static asset caching
      location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?)$ {
        expires 30d;
        access_log off;
        add_header Cache-Control "public";
      }
    }

    # ====================
    # üîß BACKEND ROUTES
    # ====================
    location /api/ {
      limit_req zone=req_limit_per_ip burst=20 nodelay;

      rewrite ^/api/(.*)$ /$1 break;
      proxy_pass http://backend_service;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_cache_bypass $http_upgrade;
    }

    # ====================
    # ‚úÖ HEALTHCHECK
    # ====================
    location /health {
      return 200 'OK';
      add_header Content-Type text/plain;
    }

    # ====================
    # ‚öô TIMEOUT & LIMITS
    # ====================
    client_max_body_size 10M;
    proxy_read_timeout 60s;
    proxy_connect_timeout 30s;
    proxy_send_timeout 60s;
  }
}
